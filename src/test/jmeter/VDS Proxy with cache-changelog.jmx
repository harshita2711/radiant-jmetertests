<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="VDS proxy with cache" enabled="true">
      <stringProp name="TestPlan.comments">proxy on o=companydirectory, changelog capture connector</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="true"/>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1415127794000</longProp>
        <longProp name="ThreadGroup.end_time">1415127794000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="create proxy" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">cmd</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">${rli_home}\bin\vdsconfig.bat create-ldapproxy -namingcontext ${pname} -datasourcename ${datasource} -remotebasedn ${basedn}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory">${rli_home}/bin</stringProp>
          <stringProp name="TestPlan.comments">Createa proxy to a HDAP store</stringProp>
        </SystemSampler>
        <hashTree/>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Create cache" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">cmd</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">${rli_home}\bin\vdsconfig.bat create-pcache -namingcontext ${pname} -autorefresh</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory">${rli_home}/bin</stringProp>
          <stringProp name="TestPlan.comments">Cache th eproxy on the primary source with the join</stringProp>
        </SystemSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1413235444000</longProp>
        <longProp name="ThreadGroup.end_time">1413235444000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="Bind to VDS" enabled="true">
          <stringProp name="servername">${host}</stringProp>
          <stringProp name="port">${port}</stringProp>
          <stringProp name="rootdn"></stringProp>
          <stringProp name="scope">2</stringProp>
          <stringProp name="countlimit"></stringProp>
          <stringProp name="timelimit"></stringProp>
          <stringProp name="attributes"></stringProp>
          <stringProp name="return_object">false</stringProp>
          <stringProp name="deref_aliases">false</stringProp>
          <stringProp name="connection_timeout"></stringProp>
          <stringProp name="parseflag">false</stringProp>
          <stringProp name="secure">false</stringProp>
          <stringProp name="user_dn">${user}</stringProp>
          <stringProp name="user_pw">secretsecret</stringProp>
          <stringProp name="comparedn"></stringProp>
          <stringProp name="comparefilt"></stringProp>
          <stringProp name="modddn"></stringProp>
          <stringProp name="newdn"></stringProp>
          <stringProp name="test">bind</stringProp>
        </LDAPExtSampler>
        <hashTree/>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Set conector type" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">cmd</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">${rli_home}\bin\vdsconfig.bat set-capture-contype -id ${conid} -topology ${toponame} -type ${contype}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory">${rli_home}/bin</stringProp>
        </SystemSampler>
        <hashTree/>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Init cache" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">cmd</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">${rli_home}\bin\vdsconfig.bat init-pcache -namingcontext ${pname}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory">${rli_home}/bin</stringProp>
        </SystemSampler>
        <hashTree/>
        <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="search user" enabled="true">
          <stringProp name="TestPlan.comments">search for a user in store to confirm proxy has been created properly</stringProp>
          <stringProp name="servername"></stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="rootdn"></stringProp>
          <stringProp name="scope">2</stringProp>
          <stringProp name="countlimit"></stringProp>
          <stringProp name="timelimit"></stringProp>
          <stringProp name="attributes"></stringProp>
          <stringProp name="return_object">true</stringProp>
          <stringProp name="deref_aliases">false</stringProp>
          <stringProp name="connection_timeout"></stringProp>
          <stringProp name="parseflag">true</stringProp>
          <stringProp name="secure">false</stringProp>
          <stringProp name="user_dn"></stringProp>
          <stringProp name="user_pw"></stringProp>
          <stringProp name="comparedn">o=store</stringProp>
          <stringProp name="comparefilt"></stringProp>
          <stringProp name="modddn"></stringProp>
          <stringProp name="newdn"></stringProp>
          <stringProp name="test">search</stringProp>
          <stringProp name="search">action=usecache,${pname}</stringProp>
          <stringProp name="searchfilter">(${searchattr}=${searchval})</stringProp>
        </LDAPExtSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1765783732">&lt;${searchattr}&gt;${searchval}&lt;/${searchattr}&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Scope.variable"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">240000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Start connectors" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">cmd</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">${rli_home}\r1syncsvcs\bin\topology.bat startTopology ${toponame}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory">${rli_home}/r1syncsvcs/bin</stringProp>
        </SystemSampler>
        <hashTree/>
        <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="add user to backend" enabled="true">
          <stringProp name="servername"></stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="rootdn"></stringProp>
          <stringProp name="scope">2</stringProp>
          <stringProp name="countlimit"></stringProp>
          <stringProp name="timelimit"></stringProp>
          <stringProp name="attributes"></stringProp>
          <stringProp name="return_object">false</stringProp>
          <stringProp name="deref_aliases">false</stringProp>
          <stringProp name="connection_timeout"></stringProp>
          <stringProp name="parseflag">false</stringProp>
          <stringProp name="secure">false</stringProp>
          <stringProp name="user_dn"></stringProp>
          <stringProp name="user_pw"></stringProp>
          <stringProp name="comparedn"></stringProp>
          <stringProp name="comparefilt"></stringProp>
          <stringProp name="modddn"></stringProp>
          <stringProp name="newdn"></stringProp>
          <stringProp name="test">add</stringProp>
          <stringProp name="base_entry_dn">${userdn}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sn" elementType="Argument">
                <stringProp name="Argument.name">sn</stringProp>
                <stringProp name="Argument.value">user</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cn" elementType="Argument">
                <stringProp name="Argument.name">cn</stringProp>
                <stringProp name="Argument.value">test user</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="uid" elementType="Argument">
                <stringProp name="Argument.name">uid</stringProp>
                <stringProp name="Argument.value">test_user</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="objectclass" elementType="Argument">
                <stringProp name="Argument.name">objectclass</stringProp>
                <stringProp name="Argument.value">top</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="objectclass" elementType="Argument">
                <stringProp name="Argument.name">objectclass</stringProp>
                <stringProp name="Argument.value">inetorgperson</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="objectclass" elementType="Argument">
                <stringProp name="Argument.name">objectclass</stringProp>
                <stringProp name="Argument.value">person</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="objectclass" elementType="Argument">
                <stringProp name="Argument.name">objectclass</stringProp>
                <stringProp name="Argument.value">organizationalperson</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="homePhone" elementType="Argument">
                <stringProp name="Argument.name">homePhone</stringProp>
                <stringProp name="Argument.value">${phone}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </LDAPExtSampler>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="RunTime.seconds">100</stringProp>
        </RunTime>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">LAST</stringProp>
          </WhileController>
          <hashTree>
            <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="search for added user" enabled="true">
              <stringProp name="servername"></stringProp>
              <stringProp name="port"></stringProp>
              <stringProp name="rootdn"></stringProp>
              <stringProp name="scope">2</stringProp>
              <stringProp name="countlimit"></stringProp>
              <stringProp name="timelimit"></stringProp>
              <stringProp name="attributes"></stringProp>
              <stringProp name="return_object">true</stringProp>
              <stringProp name="deref_aliases">false</stringProp>
              <stringProp name="connection_timeout"></stringProp>
              <stringProp name="parseflag">true</stringProp>
              <stringProp name="secure">false</stringProp>
              <stringProp name="user_dn"></stringProp>
              <stringProp name="user_pw"></stringProp>
              <stringProp name="comparedn">o=store</stringProp>
              <stringProp name="comparefilt"></stringProp>
              <stringProp name="modddn"></stringProp>
              <stringProp name="newdn"></stringProp>
              <stringProp name="test">search</stringProp>
              <stringProp name="search">${pname}</stringProp>
              <stringProp name="searchfilter">(${newattr}=${newval})</stringProp>
            </LDAPExtSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1248228578">&lt;${newattr}&gt;${newval}&lt;/${newattr}&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
                <stringProp name="Scope.variable"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="modify an attribute for user" enabled="true">
          <stringProp name="servername"></stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="rootdn"></stringProp>
          <stringProp name="scope">2</stringProp>
          <stringProp name="countlimit"></stringProp>
          <stringProp name="timelimit"></stringProp>
          <stringProp name="attributes"></stringProp>
          <stringProp name="return_object">false</stringProp>
          <stringProp name="deref_aliases">false</stringProp>
          <stringProp name="connection_timeout"></stringProp>
          <stringProp name="parseflag">false</stringProp>
          <stringProp name="secure">false</stringProp>
          <stringProp name="user_dn"></stringProp>
          <stringProp name="user_pw"></stringProp>
          <stringProp name="comparedn"></stringProp>
          <stringProp name="comparefilt"></stringProp>
          <stringProp name="modddn"></stringProp>
          <stringProp name="newdn"></stringProp>
          <stringProp name="test">modify</stringProp>
          <stringProp name="base_entry_dn">${userdn}</stringProp>
          <elementProp name="ldaparguments" elementType="LDAPArguments" guiclass="LDAPArgumentsPanel" testclass="LDAPArguments" testname="LDAP Extended Request Defaults" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="${modattr}" elementType="LDAPArgument">
                <stringProp name="Argument.name">${modattr}</stringProp>
                <stringProp name="Argument.value">${modval}</stringProp>
                <stringProp name="Argument.opcode">replace</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </LDAPExtSampler>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="RunTime.seconds">50</stringProp>
        </RunTime>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">LAST</stringProp>
          </WhileController>
          <hashTree>
            <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="search for modified attribute" enabled="true">
              <stringProp name="servername"></stringProp>
              <stringProp name="port"></stringProp>
              <stringProp name="rootdn"></stringProp>
              <stringProp name="scope">2</stringProp>
              <stringProp name="countlimit"></stringProp>
              <stringProp name="timelimit"></stringProp>
              <stringProp name="attributes"></stringProp>
              <stringProp name="return_object">true</stringProp>
              <stringProp name="deref_aliases">false</stringProp>
              <stringProp name="connection_timeout"></stringProp>
              <stringProp name="parseflag">true</stringProp>
              <stringProp name="secure">false</stringProp>
              <stringProp name="user_dn"></stringProp>
              <stringProp name="user_pw"></stringProp>
              <stringProp name="comparedn">${userdn}</stringProp>
              <stringProp name="comparefilt">${modattr}=${modval}</stringProp>
              <stringProp name="modddn"></stringProp>
              <stringProp name="newdn"></stringProp>
              <stringProp name="test">search</stringProp>
              <stringProp name="search">${pname}</stringProp>
              <stringProp name="searchfilter">(${modattr}=${modval})</stringProp>
            </LDAPExtSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="728966522">&lt;${modattr}&gt;${modval}&lt;/${modattr}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="search for modified attribute" enabled="true">
          <stringProp name="servername"></stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="rootdn"></stringProp>
          <stringProp name="scope">2</stringProp>
          <stringProp name="countlimit"></stringProp>
          <stringProp name="timelimit"></stringProp>
          <stringProp name="attributes"></stringProp>
          <stringProp name="return_object">true</stringProp>
          <stringProp name="deref_aliases">false</stringProp>
          <stringProp name="connection_timeout"></stringProp>
          <stringProp name="parseflag">true</stringProp>
          <stringProp name="secure">false</stringProp>
          <stringProp name="user_dn"></stringProp>
          <stringProp name="user_pw"></stringProp>
          <stringProp name="comparedn">${userdn}</stringProp>
          <stringProp name="comparefilt">${modattr}=${modval}</stringProp>
          <stringProp name="modddn"></stringProp>
          <stringProp name="newdn"></stringProp>
          <stringProp name="test">compare</stringProp>
        </LDAPExtSampler>
        <hashTree/>
        <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="modify RDN" enabled="true">
          <stringProp name="servername"></stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="rootdn"></stringProp>
          <stringProp name="scope">2</stringProp>
          <stringProp name="countlimit"></stringProp>
          <stringProp name="timelimit"></stringProp>
          <stringProp name="attributes"></stringProp>
          <stringProp name="return_object">false</stringProp>
          <stringProp name="deref_aliases">false</stringProp>
          <stringProp name="connection_timeout"></stringProp>
          <stringProp name="parseflag">false</stringProp>
          <stringProp name="secure">false</stringProp>
          <stringProp name="user_dn"></stringProp>
          <stringProp name="user_pw"></stringProp>
          <stringProp name="comparedn"></stringProp>
          <stringProp name="comparefilt"></stringProp>
          <stringProp name="modddn">${userdn}</stringProp>
          <stringProp name="newdn">${modrdnattr}=${modrdnval}</stringProp>
          <stringProp name="test">rename</stringProp>
        </LDAPExtSampler>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="RunTime.seconds">30</stringProp>
        </RunTime>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">LAST</stringProp>
          </WhileController>
          <hashTree>
            <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="search for modified dn" enabled="true">
              <stringProp name="servername"></stringProp>
              <stringProp name="port"></stringProp>
              <stringProp name="rootdn"></stringProp>
              <stringProp name="scope">2</stringProp>
              <stringProp name="countlimit"></stringProp>
              <stringProp name="timelimit"></stringProp>
              <stringProp name="attributes"></stringProp>
              <stringProp name="return_object">true</stringProp>
              <stringProp name="deref_aliases">false</stringProp>
              <stringProp name="connection_timeout"></stringProp>
              <stringProp name="parseflag">true</stringProp>
              <stringProp name="secure">false</stringProp>
              <stringProp name="user_dn"></stringProp>
              <stringProp name="user_pw"></stringProp>
              <stringProp name="comparedn">o=store</stringProp>
              <stringProp name="comparefilt"></stringProp>
              <stringProp name="modddn"></stringProp>
              <stringProp name="newdn"></stringProp>
              <stringProp name="test">search</stringProp>
              <stringProp name="search">${pname}</stringProp>
              <stringProp name="searchfilter">(${modrdnattr}=${modrdnval})</stringProp>
            </LDAPExtSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1899302402">&lt;${modrdnattr}&gt;${modrdnval}&lt;/${modrdnattr}&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
                <stringProp name="Scope.variable"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="compare dn to new value" enabled="true">
          <stringProp name="servername"></stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="rootdn"></stringProp>
          <stringProp name="scope">2</stringProp>
          <stringProp name="countlimit"></stringProp>
          <stringProp name="timelimit"></stringProp>
          <stringProp name="attributes"></stringProp>
          <stringProp name="return_object">true</stringProp>
          <stringProp name="deref_aliases">false</stringProp>
          <stringProp name="connection_timeout"></stringProp>
          <stringProp name="parseflag">true</stringProp>
          <stringProp name="secure">false</stringProp>
          <stringProp name="user_dn"></stringProp>
          <stringProp name="user_pw"></stringProp>
          <stringProp name="comparedn">${modrdn}</stringProp>
          <stringProp name="comparefilt">${modrdnattr}=${modrdnval}</stringProp>
          <stringProp name="modddn"></stringProp>
          <stringProp name="newdn"></stringProp>
          <stringProp name="test">compare</stringProp>
        </LDAPExtSampler>
        <hashTree/>
        <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="delete user" enabled="true">
          <stringProp name="servername"></stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="rootdn"></stringProp>
          <stringProp name="scope">2</stringProp>
          <stringProp name="countlimit"></stringProp>
          <stringProp name="timelimit"></stringProp>
          <stringProp name="attributes"></stringProp>
          <stringProp name="return_object">false</stringProp>
          <stringProp name="deref_aliases">false</stringProp>
          <stringProp name="connection_timeout"></stringProp>
          <stringProp name="parseflag">false</stringProp>
          <stringProp name="secure">false</stringProp>
          <stringProp name="user_dn"></stringProp>
          <stringProp name="user_pw"></stringProp>
          <stringProp name="comparedn"></stringProp>
          <stringProp name="comparefilt"></stringProp>
          <stringProp name="modddn"></stringProp>
          <stringProp name="newdn"></stringProp>
          <stringProp name="test">delete</stringProp>
          <stringProp name="delete">${modrdn}</stringProp>
        </LDAPExtSampler>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="RunTime.seconds">60</stringProp>
        </RunTime>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">LAST</stringProp>
          </WhileController>
          <hashTree>
            <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="search for deleted user" enabled="true">
              <stringProp name="servername"></stringProp>
              <stringProp name="port"></stringProp>
              <stringProp name="rootdn"></stringProp>
              <stringProp name="scope">2</stringProp>
              <stringProp name="countlimit"></stringProp>
              <stringProp name="timelimit"></stringProp>
              <stringProp name="attributes"></stringProp>
              <stringProp name="return_object">true</stringProp>
              <stringProp name="deref_aliases">false</stringProp>
              <stringProp name="connection_timeout"></stringProp>
              <stringProp name="parseflag">true</stringProp>
              <stringProp name="secure">false</stringProp>
              <stringProp name="user_dn"></stringProp>
              <stringProp name="user_pw"></stringProp>
              <stringProp name="comparedn">o=store</stringProp>
              <stringProp name="comparefilt"></stringProp>
              <stringProp name="modddn"></stringProp>
              <stringProp name="newdn"></stringProp>
              <stringProp name="test">search</stringProp>
              <stringProp name="search">${pname}</stringProp>
              <stringProp name="searchfilter">(${modrdnattr}=${modrdnval})</stringProp>
            </LDAPExtSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1899302402">&lt;${modrdnattr}&gt;${modrdnval}&lt;/${modrdnattr}&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Scope.variable"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="unbind from VDS" enabled="true">
          <stringProp name="servername"></stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="rootdn"></stringProp>
          <stringProp name="scope">2</stringProp>
          <stringProp name="countlimit"></stringProp>
          <stringProp name="timelimit"></stringProp>
          <stringProp name="attributes"></stringProp>
          <stringProp name="return_object">false</stringProp>
          <stringProp name="deref_aliases">false</stringProp>
          <stringProp name="connection_timeout"></stringProp>
          <stringProp name="parseflag">false</stringProp>
          <stringProp name="secure">false</stringProp>
          <stringProp name="user_dn"></stringProp>
          <stringProp name="user_pw"></stringProp>
          <stringProp name="comparedn"></stringProp>
          <stringProp name="comparefilt"></stringProp>
          <stringProp name="modddn"></stringProp>
          <stringProp name="newdn"></stringProp>
          <stringProp name="test">unbind</stringProp>
        </LDAPExtSampler>
        <hashTree/>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1414010877000</longProp>
        <longProp name="ThreadGroup.end_time">1414010877000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="delete cache" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">cmd</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">${rli_home}\bin\vdsconfig.bat delete-cache -namingcontext ${pname}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory">${rli_home}/bin</stringProp>
        </SystemSampler>
        <hashTree/>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="delete proxy" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">cmd</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">${rli_home}\bin\vdsconfig.bat delete-context -namingcontext ${pname}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory">${rli_home}/bin</stringProp>
        </SystemSampler>
        <hashTree/>
      </hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="rli_home" elementType="Argument">
            <stringProp name="Argument.name">rli_home</stringProp>
            <stringProp name="Argument.value">C:/radiantone/vds</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">2389</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="user" elementType="Argument">
            <stringProp name="Argument.name">user</stringProp>
            <stringProp name="Argument.value">cn=directory manager</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pname" elementType="Argument">
            <stringProp name="Argument.name">pname</stringProp>
            <stringProp name="Argument.value">o=proxytest</stringProp>
            <stringProp name="Argument.desc">proxy naming context and search base for users</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="datasource" elementType="Argument">
            <stringProp name="Argument.name">datasource</stringProp>
            <stringProp name="Argument.value">vds</stringProp>
            <stringProp name="Argument.desc">data source name</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="basedn" elementType="Argument">
            <stringProp name="Argument.name">basedn</stringProp>
            <stringProp name="Argument.value">o=companydirectory</stringProp>
            <stringProp name="Argument.desc">data source remote baseDN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userdn" elementType="Argument">
            <stringProp name="Argument.name">userdn</stringProp>
            <stringProp name="Argument.value">uid=test_user,ou=Accounting,o=companydirectory</stringProp>
            <stringProp name="Argument.desc">entry DN for new user</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="searchattr" elementType="Argument">
            <stringProp name="Argument.name">searchattr</stringProp>
            <stringProp name="Argument.value">uid</stringProp>
            <stringProp name="Argument.desc">attribute to test the proxy has been correctly created</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="newattr" elementType="Argument">
            <stringProp name="Argument.name">newattr</stringProp>
            <stringProp name="Argument.value">uid</stringProp>
            <stringProp name="Argument.desc">attribute to test the new user has been added correctly</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="modattr" elementType="Argument">
            <stringProp name="Argument.name">modattr</stringProp>
            <stringProp name="Argument.value">homePhone</stringProp>
            <stringProp name="Argument.desc">attribute to be modified to test mod capability</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="modval" elementType="Argument">
            <stringProp name="Argument.name">modval</stringProp>
            <stringProp name="Argument.value">510-444-1111</stringProp>
            <stringProp name="Argument.desc">value for the modified attribtue</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="newval" elementType="Argument">
            <stringProp name="Argument.name">newval</stringProp>
            <stringProp name="Argument.value">test_user</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">attribute value for the new user</stringProp>
          </elementProp>
          <elementProp name="searchval" elementType="Argument">
            <stringProp name="Argument.name">searchval</stringProp>
            <stringProp name="Argument.value">Aaron_Medler</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">attribute value to test proxy creation</stringProp>
          </elementProp>
          <elementProp name="modrdn" elementType="Argument">
            <stringProp name="Argument.name">modrdn</stringProp>
            <stringProp name="Argument.value">uid=new_user,ou=Accounting,o=companydirectory</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">new rdn to rest modrdn</stringProp>
          </elementProp>
          <elementProp name="modrdnval" elementType="Argument">
            <stringProp name="Argument.name">modrdnval</stringProp>
            <stringProp name="Argument.value">new_user</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="modrdnattr" elementType="Argument">
            <stringProp name="Argument.name">modrdnattr</stringProp>
            <stringProp name="Argument.value">uid</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="toponame" elementType="Argument">
            <stringProp name="Argument.name">toponame</stringProp>
            <stringProp name="Argument.value">CF_O_PROXYTEST</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="conid" elementType="Argument">
            <stringProp name="Argument.name">conid</stringProp>
            <stringProp name="Argument.value">object=generic,dv=so_o_proxytest</stringProp>
            <stringProp name="Argument.desc">connector ID</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="contype" elementType="Argument">
            <stringProp name="Argument.name">contype</stringProp>
            <stringProp name="Argument.value">ldap</stringProp>
            <stringProp name="Argument.desc">connector type</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
        <stringProp name="maximumValue">9999</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">000-000-0000</stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">phone</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
